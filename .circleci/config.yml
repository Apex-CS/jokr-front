version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:14.0-buster
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm@5"
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run Tests
          command: npm run test
  docker-build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest
  heroku-release:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.
      - run:
          name: Tag image for Heroku push
          command: docker tag $IMAGE_NAME:latest $HEROKU_IMAGE:release
      - run:
          name: Push Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            docker push $HEROKU_IMAGE:release
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a jokr-front web
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: pacodevs/jokr-front
      HEROKU_IMAGE: registry.heroku.com/jokr-front/web
    docker:
      - image: circleci/buildpack-deps:stretch
workflows:
  version: 2
  app-docker-push:
    jobs:
      - build
      - docker-build:
          requires:
            - build
          # filters:
          #   branches:
          #     only: master
      - publish-latest:
          requires:
            - docker-build
          # filters:
          #   branches:
          #     only: master
      - heroku-release:
          requires:
            - publish-latest
          # filters:
          #   branches:
          #     only: master
